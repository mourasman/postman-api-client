/**
 * Postman API
 * Postman API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Query from './Query';
import Variable from './Variable';

/**
 * The Url model module.
 * @module model/Url
 * @version 1.0.0
 */
class Url {
    /**
     * Constructs a new <code>Url</code>.
     * @alias module:model/Url
     * @param raw {String} 
     * @param host {Array.<String>} 
     * @param path {Array.<String>} 
     */
    constructor(raw, host, path) { 
        
        Url.initialize(this, raw, host, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, raw, host, path) { 
        obj['raw'] = raw;
        obj['host'] = host;
        obj['path'] = path;
    }

    /**
     * Constructs a <code>Url</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Url} obj Optional instance to populate.
     * @return {module:model/Url} The populated <code>Url</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Url();

            if (data.hasOwnProperty('raw')) {
                obj['raw'] = ApiClient.convertToType(data['raw'], 'String');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], ['String']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], ['String']);
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], [Query]);
            }
            if (data.hasOwnProperty('variable')) {
                obj['variable'] = ApiClient.convertToType(data['variable'], [Variable]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} raw
 */
Url.prototype['raw'] = undefined;

/**
 * @member {Array.<String>} host
 */
Url.prototype['host'] = undefined;

/**
 * @member {Array.<String>} path
 */
Url.prototype['path'] = undefined;

/**
 * @member {Array.<module:model/Query>} query
 */
Url.prototype['query'] = undefined;

/**
 * @member {Array.<module:model/Variable>} variable
 */
Url.prototype['variable'] = undefined;






export default Url;

