/**
 * Postman API
 * Postman API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Url1 from './Url1';

/**
 * The OriginalRequest model module.
 * @module model/OriginalRequest
 * @version 1.0.0
 */
class OriginalRequest {
    /**
     * Constructs a new <code>OriginalRequest</code>.
     * @alias module:model/OriginalRequest
     * @param method {String} 
     * @param header {Array.<String>} 
     * @param url {module:model/Url1} 
     */
    constructor(method, header, url) { 
        
        OriginalRequest.initialize(this, method, header, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, method, header, url) { 
        obj['method'] = method;
        obj['header'] = header;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>OriginalRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OriginalRequest} obj Optional instance to populate.
     * @return {module:model/OriginalRequest} The populated <code>OriginalRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OriginalRequest();

            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('header')) {
                obj['header'] = ApiClient.convertToType(data['header'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = Url1.constructFromObject(data['url']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} method
 */
OriginalRequest.prototype['method'] = undefined;

/**
 * @member {Array.<String>} header
 */
OriginalRequest.prototype['header'] = undefined;

/**
 * @member {module:model/Url1} url
 */
OriginalRequest.prototype['url'] = undefined;






export default OriginalRequest;

