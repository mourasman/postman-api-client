/**
 * Postman API
 * Postman API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Info from './Info';
import Item from './Item';

/**
 * The Collection1 model module.
 * @module model/Collection1
 * @version 1.0.0
 */
class Collection1 {
    /**
     * Constructs a new <code>Collection1</code>.
     * @alias module:model/Collection1
     * @param variables {Array.<String>} 
     * @param info {module:model/Info} 
     * @param item {Array.<module:model/Item>} 
     */
    constructor(variables, info, item) { 
        
        Collection1.initialize(this, variables, info, item);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, variables, info, item) { 
        obj['variables'] = variables;
        obj['info'] = info;
        obj['item'] = item;
    }

    /**
     * Constructs a <code>Collection1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collection1} obj Optional instance to populate.
     * @return {module:model/Collection1} The populated <code>Collection1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collection1();

            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], ['String']);
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = Info.constructFromObject(data['info']);
            }
            if (data.hasOwnProperty('item')) {
                obj['item'] = ApiClient.convertToType(data['item'], [Item]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} variables
 */
Collection1.prototype['variables'] = undefined;

/**
 * @member {module:model/Info} info
 */
Collection1.prototype['info'] = undefined;

/**
 * @member {Array.<module:model/Item>} item
 */
Collection1.prototype['item'] = undefined;






export default Collection1;

