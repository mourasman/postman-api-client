/**
 * Postman API
 * Postman API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error13 from './Error13';

/**
 * The ErrorInvalidParams model module.
 * @module model/ErrorInvalidParams
 * @version 1.0.0
 */
class ErrorInvalidParams {
    /**
     * Constructs a new <code>ErrorInvalidParams</code>.
     * @alias module:model/ErrorInvalidParams
     * @param error {module:model/Error13} 
     */
    constructor(error) { 
        
        ErrorInvalidParams.initialize(this, error);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, error) { 
        obj['error'] = error;
    }

    /**
     * Constructs a <code>ErrorInvalidParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorInvalidParams} obj Optional instance to populate.
     * @return {module:model/ErrorInvalidParams} The populated <code>ErrorInvalidParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorInvalidParams();

            if (data.hasOwnProperty('error')) {
                obj['error'] = Error13.constructFromObject(data['error']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Error13} error
 */
ErrorInvalidParams.prototype['error'] = undefined;






export default ErrorInvalidParams;

